# Windows builds.
name: Windows

on:
  push:
    paths:
      - "**"
      - "!.github/**"
      - ".github/workflows/Windows.yml"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      # explicit include-based build matrix, of known valid options
      matrix:
        include:
          - os: windows-2019
            cuda: "11.4.0"
            visual_studio: "Visual Studio 16 2019"

    env:
      build_dir: "build"
      config: "Release"

    steps:
      - uses: actions/checkout@v2

      - name: Create Build Environment
        run: |
          python3 -m pip install --upgrade pip setuptools
          python3 -m pip install cmake
      - name: Install conan
        shell: bash
        run: |
          python3 -m pip install conan

      - name: Configure CMake
        id: configure
        shell: bash
        run: cmake . -B ${{ env.build_dir }} -G "${{ matrix.visual_studio }}" -A x64 -DCMAKE_BUILD_TYPE=${{ env.config }} -DBUILD_TESTING=ON

      - name: Configure Error Processing
        if: ${{ (failure() && steps.configure.outcome == 'failure') || success() }}
        working-directory: ${{ env.build_dir }}
        shell: bash
        run: |
          if [[ -f "CMakeFiles/CMakeOutput.log" ]]; then
            echo "---- CMakeFiles/CMakeOutput.log"
            cat CMakeFiles/CMakeOutput.log
            echo "----"
          fi
          if [[ -f "CMakeFiles/CMakeError.log" ]]; then
            echo "---- CMakeFiles/CMakeError.log"
            cat CMakeFiles/CMakeError.log
            echo "----"
          fi

      - name: Build
        working-directory: ${{ env.build_dir }}
        run: cmake --build . --config ${{ env.config }} --target ALL_BUILD --verbose

      - name: Test
        working-directory: ${{ env.build_dir }}
        run: ctest -C ${{ env.config }}